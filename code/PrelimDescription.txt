module: converting string to upper or lower case
    function name: convertString
    takes two parameters: pInputString (input by user) and a boolean checker to swap between upper or lower case
    returns pInputString in whatever chosen format determined by user (upper or lower case)


module: Identify whether numeric values are in a given string
    function name: numericFilter
    takes one parameter: pInputString (input by user)
    turns the string into an array of characters
    loop through character array and add +1 to a counter if a character is a numeric value
    print out how many numeric values are in the array

module: remove any numeric values from a given array and then convert the string to upper or lower case
    function name: removeNConvert
    takes two parameters: pInputString (input by user) and a boolean checker 
    takes pInputString and turns it into a character array
    loops through the array and whatever elements are not numeric values are added to a new array
    then that new array is converted back to string and plugged into convertString along with the boolean checker
    the newString is returned

module: converting meters to feet and vice versa
    function name = meterNFeet
    takes two parameters: pInputDoub and boolean checker
    if the checker is true itll assume the double is in meters and will convert to feet (* 3.28)
    if the checker is false itll assume the double is in feet and will convert to meters (/ 3.28)
    return the result

module: converting centimeters to inches and vice versa
    function name = centiNInches
    takes two parameters: pInputDoub and boolean checker
    if the checker is true itll assume the double is in centimeters and will convert to inches (/ 2.54)
    if the checker is false itll assume the double is in inches and will convert to centimeters (* 2.54)
    return the result
    =